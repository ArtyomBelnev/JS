---array

slice(начало)
slice(начало,конец) возвращает новый массив, содержащий часть исходного элемента и до конца массима,
или до конца указанного элемента, если указан конечный элемент отрицателен - он означает смещение 
конечного элемента от конца массива, а не от начала 
var aa=['A','B','C',D','E','F','G'];
console.log(aa.slice(3));\\['D','E','F','G']
console.log(aa.slice(3,5));\\['D','E']
console.log(aa.slice(3,-1));\\['D','E','F']

splice(нач,колво,эл1,...)
удаляет, начиная с указанной начальной позиции, указанное количество элементов,и возвращает их.,
всталяет, начиная с указанной позиции, новый элементы(этот метод изменяет массив!)
var m=['A','B','C',D','E','E','F','G'];
console.log(m.splice(2,3));\\['C','D','E']
console.log(m);\\['A','B','F','G'];
console.log(m.splice(2,0'q','r'0);\\[]
console.log(m);\\['A','B','q','r','F','G'];


--string

slice(начало)
slice(начало,конец)
возвращает подстроку от указанного индекса начала до конца строки , или от указанного индекса до
указанного индекса конца, не включая его 
var s='Утром деньги, вечером стулья!';
console.log(s.slice(14));\\вечером стулья
console.log(s.slice(14,21));\\вечером 

--number

toFixed(знаков) преобразует число в строку, содержащую указанное количество знаков после десятичной точки,
по умолчанию знаков=0
console.log ( (5.1234567).toFixed(3));\\5,124
console.log ( (5.1).toFixed(3));\\5,100
console.log ( (5.8).toFixed(6));\\6

---Глупая сортировка

Массив идет слева-направо и по пути сравнивает числа,если встречается неотсортированная пара, меняем их местами и возвращаемся 
на начало. Снова проходим массив,пока массив будет  не отсортирован.


--Пузырьковая сортировка

Массив идет от начало до конца, попутно меняя местами неотсортированные эjjлементы. В результате первого прохода на последнее место
 становится максимальный элемент. Теперь снова обходим от первого элемента до предпоследнего, и так каждый раз уменьшая неотсортированную часть.

this-доступ к текущему объекту;
call - устанавливает контекст,передает параметры раздельно и вызывает функцию
apply -устанавливает контекст,передает параметры ввиде массива и вызывает функцию
bind - устанавливает контекст  и передаёт параметры не вызывая функцию;

ООП- объектна-ориентированное программивароние
1) Инкапсуляцию -это процесс скрытия кода от пользавателя
2) Наследование - это насследование свойст и методов других классов
3)Полиморфизм это многообразие форма объееа передаваемого в метод


Объекст на который указывается ссылка __proto__ называется ПРОТОТИПОМ

Obj.hasOwnProperty(prop) возвращает true, если свойство prop принадлежит самому объекту , иначе false

Object.create(null) объект не имеет прототипа и нет лишних свойст

__proto__ это свойство объекта наследия, хранящего в себе ссылку на объект прототипа

Prototype - это свойство функция-констркутор класса, хранящее в себе ссылку на объект прототипа

instaceof - оператор каоторый проверяет какому классу принадлежит объект с учетом прототипнго наследования


